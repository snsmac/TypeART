import os
import sys
import re
import platform
import subprocess

import lit.util
import lit.formats

config.name = "TypeArtPassTest"

typeart_lib_root = getattr(config, 'typeartpass_lib_dir', None)
typeart_rt_root = getattr(config, 'typeartpass_rt_dir', None)
typeart_script_dir = getattr(config, 'typeartpass_script_dir', None)

if typeart_lib_root is None or typeart_rt_root is None or typeart_script_dir is None:
  # Check for 'typeartpass_site_config' user parameter, and use that if available.
  site_cfg = lit_config.params.get('typeartpass_site_config', None)
  if site_cfg and os.path.exists(site_cfg):
    lit_config.load_config(config, site_cfg)
    raise SystemExit

typeart_script_dir = typeart_script_dir
typeart_bin_dir = typeart_lib_root
typeart_rt_dir = typeart_rt_root
plugin_name = 'typeartpass.so'
plugin_args ='-typeart -typeart-stats'

execute_external = (True)
config.test_format = lit.formats.ShTest(execute_external)

config.suffixes = ['.c','.cpp', '.llin']

config.excludes = ['Inputs', 'mpi_interceptor', 'lulesh']

config.substitutions.append(('%scriptpath', typeart_script_dir))
config.substitutions.append(('%pluginpath', typeart_bin_dir))
config.substitutions.append(('%rtpath', typeart_rt_dir))
config.substitutions.append(('%pluginname', plugin_name))
config.substitutions.append(('%pluginargs', plugin_args))
